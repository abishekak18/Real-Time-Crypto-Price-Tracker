import { createSlice, createSelector } from '@reduxjs/toolkit';

const initialState = {
  assets: [
    {
      id: 1,
      name: 'Bitcoin',
      symbol: 'BTC',
      price: 93759.48,
      priceChange1h: -0.43,
      priceChange24h: -0.93,
      priceChange7d: -11.11,
      marketCap: 1861618902186,
      volume24h: 43874950947,
      circulatingSupply: 19.85,
      maxSupply: 21,
      sparkline: 'btc-sparkline.svg',
    },
    {
      id: 2,
      name: 'Ethereum',
      symbol: 'ETH',
      price: 1802.46,
      priceChange1h: -0.60,
      priceChange24h: -3.21,
      priceChange7d: -13.68,
      marketCap: 217581279327,
      volume24h: 23547469307,
      circulatingSupply: 120.71,
      maxSupply: null,
      sparkline: 'eth-sparkline.svg',
    },
    {
      id: 3,
      name: 'Tether',
      symbol: 'USDT',
      price: 1.00,
      priceChange1h: -0.00,
      priceChange24h: -0.00,
      priceChange7d: -0.04,
      marketCap: 145320022085,
      volume24h: 92288882007,
      circulatingSupply: 145.27,
      maxSupply: null,
      sparkline: 'usdt-sparkline.svg',
    },
    {
      id: 4,
      name: 'XRP',
      symbol: 'XRP',
      price: 2.22,
      priceChange1h: -0.46,
      priceChange24h: -0.54,
      priceChange7d: -6.18,
      marketCap: 130073814966,
      volume24h: 5131481491,
      circulatingSupply: 58.39,
      maxSupply: 100,
      sparkline: 'xrp-sparkline.svg',
    },
    {
      id: 5,
      name: 'BNB',
      symbol: 'BNB',
      price: 606.65,
      priceChange1h: -0.09,
      priceChange24h: -1.20,
      priceChange7d: -3.73,
      marketCap: 85471956947,
      volume24h: 1874281784,
      circulatingSupply: 140.89,
      maxSupply: 168,
      sparkline: 'bnb-sparkline.svg',
    },
    {
      id: 6,
      name: 'Solana',
      symbol: 'SOL',
      price: 151.51,
      priceChange1h: -0.53,
      priceChange24h: -1.26,
      priceChange7d: -14.74,
      marketCap: 78381958631,
      volume24h: 4881674486,
      circulatingSupply: 517.31,
      maxSupply: null,
      sparkline: 'sol-sparkline.svg',
    },
    {
      id: 7,
      name: 'Cardano',
      symbol: 'ADA',
      price: 0.45,
      priceChange1h: -0.22,
      priceChange24h: -1.15,
      priceChange7d: -8.42,
      marketCap: 15987654321,
      volume24h: 987654321,
      circulatingSupply: 35500,
      maxSupply: 45000,
      sparkline: 'ada-sparkline.svg',
    },
    {
      id: 8,
      name: 'Dogecoin',
      symbol: 'DOGE',
      price: 0.12,
      priceChange1h: 0.35,
      priceChange24h: -2.10,
      priceChange7d: 5.25,
      marketCap: 15987654321,
      volume24h: 1234567890,
      circulatingSupply: 132670764300,
      maxSupply: null,
      sparkline: 'doge-sparkline.svg',
    },
    {
      id: 9,
      name: 'Polkadot',
      symbol: 'DOT',
      price: 6.78,
      priceChange1h: -0.15,
      priceChange24h: -3.45,
      priceChange7d: -12.30,
      marketCap: 7654321098,
      volume24h: 345678901,
      circulatingSupply: 1128,
      maxSupply: null,
      sparkline: 'dot-sparkline.svg',
    },
    {
      id: 10,
      name: 'Polygon',
      symbol: 'MATIC',
      price: 0.75,
      priceChange1h: 0.12,
      priceChange24h: -1.75,
      priceChange7d: -9.80,
      marketCap: 6543210987,
      volume24h: 456789012,
      circulatingSupply: 8737,
      maxSupply: 10000,
      sparkline: 'matic-sparkline.svg',
    },
    {
      id: 11,
      name: 'Litecoin',
      symbol: 'LTC',
      price: 85.23,
      priceChange1h: -0.30,
      priceChange24h: -2.15,
      priceChange7d: -7.60,
      marketCap: 5987654321,
      volume24h: 567890123,
      circulatingSupply: 70.23,
      maxSupply: 84,
      sparkline: 'ltc-sparkline.svg',
    },
    {
      id: 12,
      name: 'Chainlink',
      symbol: 'LINK',
      price: 14.56,
      priceChange1h: 0.45,
      priceChange24h: -1.25,
      priceChange7d: -5.75,
      marketCap: 7654321098,
      volume24h: 678901234,
      circulatingSupply: 525.25,
      maxSupply: 1000,
      sparkline: 'link-sparkline.svg',
    }
  ],
};

export const cryptoSlice = createSlice({
  name: 'crypto',
  initialState,
  reducers: {
    updateAsset: (state, action) => {
      const { id, updates } = action.payload;
      const assetIndex = state.assets.findIndex(asset => asset.id === id);
      if (assetIndex !== -1) {
        state.assets[assetIndex] = { ...state.assets[assetIndex], ...updates };
      }
    },
  },
});


export const selectAllAssets = state => state.crypto.assets;

export const selectAssetById = createSelector(
  [selectAllAssets, (_, id) => id],
  (assets, id) => assets.find(asset => asset.id === id)
);

export const { updateAsset } = cryptoSlice.actions;
export default cryptoSlice.reducer;